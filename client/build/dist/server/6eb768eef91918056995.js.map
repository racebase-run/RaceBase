{"version":3,"file":"6eb768eef91918056995.js","sources":["webpack:///./utils/distance.js"],"sourcesContent":["import wordsToNumbers from 'words-to-numbers'\n\nexport function format(x) {\n  if (typeof x == 'undefined') return \n  x = wordsToNumbers(x.toLowerCase()) || 0; \n  if (x.match(/(\\d\\s?k|\\d\\s?km|(meter)(s)?|00\\s?m)/g)) {\n    var meters = getMeters(x);\n    if (meters > 3000 && Number.isInteger(meters / 1000))\n      return (meters / 1000) + \" km\"; \n    else \n      return meters + \"m\"; \n  } else if (x.match(/(mi)/g)) {\n    var miles = getMiles(x); \n    return miles + \" mi\";\n  } else {\n    return \"Unknown\"\n  }\n}\n\nlet getMeters = function(x) {\n  return parseInt(x\n    .toLowerCase()\n    .replace(',', '')\n    .replace(/\\s?(k)(m)?(ilometers)?/g, '000m')\n    .replace(/\\s?(meter)[s]?/g, 'm')\n    .replace(' ', '')\n    .match(/\\d+(m)/g)[0]\n    .replace('m', '')) || 0  \n}\n\nlet getMiles = function(x) {\n  return parseFloat(x\n    .toLowerCase()\n    .replace(',', '')\n    .replace(' ', '')\n    .replace(/(mi)(le)?(s)?/g, 'mi')\n    .match(/\\d+(.)?\\d*(mi)/g)[0]\n    .replace('mi', '')) || 0    \n}"],"mappings":"AAAA","sourceRoot":""}